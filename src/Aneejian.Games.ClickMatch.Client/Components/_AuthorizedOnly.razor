@inject AuthenticationService authenticationService
@implements IDisposable

@if (isAuthenticated)
{
	@ChildContent
}

@code {
	[Parameter] public RenderFragment? ChildContent { get; set; }

	bool isAuthenticated = false;

	protected override void OnInitialized()
	{
		authenticationService.OnAuthenticationStateChanged += NotifyChange;
	}

	protected override void OnAfterRender(bool firstRender)
	{
		if (firstRender)
		{
			NotifyChange(authenticationService.IsAuthenticated);
		}
	}

	private void NotifyChange(bool authenticated)
	{
		isAuthenticated = authenticated;
		StateHasChanged(); // This is necessary to re-render the component
	}

	public void Dispose()
	{
		if (authenticationService != null)
			authenticationService.OnAuthenticationStateChanged -= NotifyChange;
	}
}