@implements IDisposable
@inject AuthenticationService authenticationService
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime

<nav class="navbar navbar-expand-lg bg-body">
	<div class="container-fluid">
		<div class="navbar-brand">
			<_AccessBased>
				<Authorized>
					<_LoggedUserProfileCard Profile="LoggedInUser" OnLogout="Logout" />
				</Authorized>
				<UnAuthorized>
					<img src="./icons/icon.svg" width="40" height="40" alt="Click & Match" />
				</UnAuthorized>
			</_AccessBased>
		</div>
		<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#collapsableNavBar"
				aria-controls="collapsableNavBar" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<div class="collapse navbar-collapse d-lg-flex" id="collapsableNavBar">
			<ul class="navbar-nav col me-auto mb-2 mb-lg-0 justify-content-lg-end">

				<_AccessBased>
					<UnAuthorized>
						<li class="nav-item">
							<NavLink class="nav-link" aria-current="page" @onclick=CollapseMenu href="@AppStrings.Pages.Home"
									 Match=NavLinkMatch.All>Home</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link" aria-current="page" @onclick=CollapseMenu href="@AppStrings.Pages.Login">Login</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link" aria-current="page" @onclick=CollapseMenu href="@AppStrings.Pages.Register">Register</NavLink>
						</li>
					</UnAuthorized>
					<Authorized>
						<li class="nav-item">
							<NavLink class="nav-link" aria-current="page" @onclick=CollapseMenu href="@AppStrings.Pages.Home"
									 Match=NavLinkMatch.All>New Game</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link" aria-current="page" @onclick=CollapseMenu href="@AppStrings.Pages.Profile">My Profile	</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link" aria-current="page" @onclick=CollapseMenu href="@AppStrings.Pages.Stats">My Stats</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link" aria-current="page" @onclick=CollapseMenu href="@AppStrings.Pages.Logout">Logout</NavLink>
						</li>
					</Authorized>
				</_AccessBased>
				<li class="nav-item repository">
					<NavLink class="nav-link ms-1 me-1" @onclick=CollapseMenu href="@AppStrings.GithubRepo" target="_blank"><i class="bi bi-github"></i> GitHub</NavLink>
				</li>
			</ul>
		</div>

	</div>
</nav>


@code {

	private UserDto? LoggedInUser { get; set; }

	private const string _navBarId = "collapsableNavBar";

	protected override void OnInitialized()
	{
		authenticationService.OnAuthenticationStateChanged += CheckLogin;
		base.OnInitialized();
	}

	private async Task Logout()
	{
		await authenticationService.Logout();
		navigationManager.NavigateTo(AppStrings.Pages.Home);
	}

	private void CheckLogin(bool isAuthenticated)
	{
		if (!isAuthenticated)
		{
			LoggedInUser = null;
			return;
		}
		LoggedInUser = authenticationService.AuthenticatedUser;
		StateHasChanged(); // This is necessary to re-render the component
	}

	public void Dispose()
	{
		if (authenticationService != null)
		{
			authenticationService.OnAuthenticationStateChanged -= CheckLogin;
		}
	}

	async Task CollapseMenu()
	{
		await jsRuntime.InvokeVoidAsync("collapseMenu", _navBarId);
	}
}