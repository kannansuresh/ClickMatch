@implements IDisposable
@inject AuthenticationService authenticationService

@if (isAuthenticated)
{
	@Authorized
}
else
{
	@UnAuthorized
}

@code {

	[Parameter]
	public RenderFragment? Authorized { get; set; }

	[Parameter]
	public RenderFragment? UnAuthorized { get; set; }

	bool isAuthenticated = false;

	protected override void OnInitialized()
	{
		NotifyChange(authenticationService.IsAuthenticated);
		authenticationService.OnAuthenticationStateChanged += NotifyChange;
	}

	private void NotifyChange(bool authenticated)
	{
		isAuthenticated = authenticated;
		StateHasChanged(); // This is necessary to re-render the component
	}

	public void Dispose()
	{
		if (authenticationService != null)
			authenticationService.OnAuthenticationStateChanged -= NotifyChange;
	}
}